{"ast":null,"code":"var _jsxFileName = \"D:\\\\Uni\\\\6th Semester\\\\Web Development\\\\Project\\\\Project\\\\studentDashboard\\\\client\\\\src\\\\dashboard\\\\dashboard.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Row, Col } from 'react-bootstrap';\nimport css from \"./dashboard.css\";\nimport Button from '@material-ui/core/Button';\nimport Modal from '@material-ui/core/Modal';\nimport Login from '../login/Login';\nimport MaterialTable from \"material-table\";\nimport TextField from '@material-ui/core/TextField';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { forwardRef } from 'react';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport $ from 'jquery';\nimport SimpleModal from \"./requiredModal\";\n\nclass Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.postToDatabaseApi = postData => {\n      return new Promise(async (resolve, reject) => {\n        axios.post(\"http://localhost:5000/api/users\", postData).then(response => {\n          console.log(\"response is:::\", response);\n          resolve(response);\n        }).catch(err => {\n          reject(err);\n        });\n      });\n    };\n\n    this.backToLogin = () => {\n      this.setState({\n        showLoginPage: true,\n        showTable: false\n      });\n    };\n\n    this.showModal = () => {\n      return /*#__PURE__*/React.createElement(Modal, {\n        open: this.state.showAddDataModal,\n        onClose: this.handleClose,\n        \"aria-labelledby\": \"simple-modal-title\",\n        \"aria-describedby\": \"simple-modal-description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        noValidate: true,\n        autoComplete: \"off\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        id: \"userId-basic\",\n        label: \"UserId\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(TextField, {\n        id: \"standard-basic\",\n        label: \"Age\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(TextField, {\n        id: \"standard-basic\",\n        label: \"Gender\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(TextField, {\n        id: \"standard-basic\",\n        label: \"Physics\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(TextField, {\n        id: \"standard-basic\",\n        label: \"Chemistry\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(TextField, {\n        id: \"standard-basic\",\n        label: \"Math\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        onClick: this.addDataToDB,\n        variant: \"text\",\n        color: \"primary\",\n        size: \"sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }\n      }, \"Add\")));\n    };\n\n    this.addData = () => {\n      this.setState({ ...this.state,\n        showAddDataModal: true\n      });\n    };\n\n    this.addDataToDB = async () => {\n      let temp_obj = {};\n      let userid_basic = document.getElementById(\"userid_basic\").value;\n      let age_basic = document.getElementById(\"age_basic\").value;\n      let gender_basic = document.getElementById(\"gender_basic\").value;\n      let physics_basic = document.getElementById(\"physics_basic\").value;\n      let chem_basic = document.getElementById(\"chem_basic\").value;\n      let math_basic = document.getElementById(\"math_basic\").value;\n      let cgpa_basic = document.getElementById(\"cgpa_basic\").value;\n      temp_obj.name = userid_basic;\n      temp_obj.age = age_basic;\n      temp_obj.gender = gender_basic;\n      temp_obj.phy = physics_basic;\n      temp_obj.chem = chem_basic;\n      temp_obj.math = math_basic;\n      temp_obj.cgpa = cgpa_basic;\n      temp_obj.email = userid_basic + \"@gmail.com\";\n      temp_obj.password = \"adminoo\";\n      console.log(\"temp_obj is:::\", temp_obj);\n\n      if (temp_obj.name != \"\" && temp_obj.age != \"\" && temp_obj.gender != \"\" && temp_obj.phy != \"\" && temp_obj.chem != \"\" && temp_obj.math != \"\" && temp_obj.cgpa != \"\") {\n        document.querySelector(\"#modal_button\").innerText = \"Adding...\";\n        document.getElementById(\"modal_err_msg\").style.display = \"none\";\n        const resp = await this.postToDatabaseApi(temp_obj);\n        console.log(\"resp is::\", resp);\n        let response = await this.props.getNewData();\n        this.setState({ ...this.state,\n          tableData: response\n        });\n        this.handleClose();\n      } else {\n        document.getElementById(\"modal_err_msg\").style.display = \"block\";\n      }\n    };\n\n    this.getTableProps = () => {\n      const data = this.state.tableData;\n      const tableIcons = {\n        Add: forwardRef((props, ref) => /*#__PURE__*/React.createElement(AddBox, Object.assign({}, props, {\n          ref: ref,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 45\n          }\n        }))),\n        Check: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Check, Object.assign({}, props, {\n          ref: ref,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 47\n          }\n        }))),\n        Clear: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Clear, Object.assign({}, props, {\n          ref: ref,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 47\n          }\n        }))),\n        Delete: forwardRef((props, ref) => /*#__PURE__*/React.createElement(DeleteOutline, Object.assign({}, props, {\n          ref: ref,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 48\n          }\n        }))),\n        DetailPanel: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronRight, Object.assign({}, props, {\n          ref: ref,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 53\n          }\n        }))),\n        Edit: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Edit, Object.assign({}, props, {\n          ref: ref,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 46\n          }\n        }))),\n        Export: forwardRef((props, ref) => /*#__PURE__*/React.createElement(SaveAlt, Object.assign({}, props, {\n          ref: ref,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 48\n          }\n        }))),\n        Filter: forwardRef((props, ref) => /*#__PURE__*/React.createElement(FilterList, Object.assign({}, props, {\n          ref: ref,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 48\n          }\n        }))),\n        FirstPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(FirstPage, Object.assign({}, props, {\n          ref: ref,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 51\n          }\n        }))),\n        LastPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(LastPage, Object.assign({}, props, {\n          ref: ref,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 50\n          }\n        }))),\n        NextPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronRight, Object.assign({}, props, {\n          ref: ref,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 50\n          }\n        }))),\n        PreviousPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronLeft, Object.assign({}, props, {\n          ref: ref,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 54\n          }\n        }))),\n        ResetSearch: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Clear, Object.assign({}, props, {\n          ref: ref,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 53\n          }\n        }))),\n        Search: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Search, Object.assign({}, props, {\n          ref: ref,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 48\n          }\n        }))),\n        SortArrow: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ArrowDownward, Object.assign({}, props, {\n          ref: ref,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 51\n          }\n        }))),\n        ThirdStateCheck: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Remove, Object.assign({}, props, {\n          ref: ref,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 57\n          }\n        }))),\n        ViewColumn: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ViewColumn, Object.assign({}, props, {\n          ref: ref,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 52\n          }\n        })))\n      };\n      const actions = [{\n        icon: tableIcons.Delete,\n        tooltip: 'Delete Row',\n        onClick: (event, rowData) => {// Do save operation\n        }\n      }];\n      const columns = [{\n        title: \"Name\",\n        field: \"name\"\n      }, {\n        title: \"Email\",\n        field: \"email\"\n      }, {\n        title: \"Age\",\n        field: \"age\"\n      }, {\n        title: \"Gender\",\n        field: \"gender\"\n      }, {\n        title: \"Phy\",\n        field: \"phy\"\n      }, {\n        title: \"Chem\",\n        field: \"chem\"\n      }, {\n        title: \"Math\",\n        field: \"math\"\n      }, {\n        title: \"CGPA\",\n        field: \"cgpa\"\n      }];\n      const options = {\n        search: true,\n        paging: true,\n        filtering: true,\n        exportButton: true,\n        headerStyle: {\n          backgroundColor: '#01579b',\n          color: '#FFF'\n        },\n        rowStyle: {\n          backgroundColor: '#EEE'\n        }\n      };\n      const tableConfig = {\n        title: \"Student Marksheet Table\",\n        data,\n        columns,\n        //actions,\n        options,\n        //icons: {...tableIcons},\n        selection: true\n      };\n      return tableConfig;\n    };\n\n    this.handleOpen = () => {\n      this.setState({ ...this.state,\n        showAddDataModal: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({ ...this.state,\n        showAddDataModal: false\n      });\n    };\n  }\n\n  componentWillMount() {\n    this.setState({\n      showLoginPage: false,\n      showTable: true,\n      showAddDataModal: false,\n      tableData: this.props.tableData,\n      showSpinner: false,\n      showErrorMsg: false\n    });\n  }\n\n  componentDidMount() {\n    /*$(document.body).click((e)=> {\n        this.setState({\n            ...this.state,\n            showAddDataModal: false,\n        });\n    });*/\n  }\n\n  componentDidUpdate() {\n    /*$(document.body).click( (e)=> {\n        this.setState({\n            ...this.state,\n            showAddDataModal: false,\n        });\n    });*/\n  }\n\n  render() {\n    const tableProps = this.getTableProps();\n    const tableIcons = {\n      Add: forwardRef((props, ref) => /*#__PURE__*/React.createElement(AddBox, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 45\n        }\n      }))),\n      Check: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Check, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 47\n        }\n      }))),\n      Clear: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Clear, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 47\n        }\n      }))),\n      Delete: forwardRef((props, ref) => /*#__PURE__*/React.createElement(DeleteOutline, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 48\n        }\n      }))),\n      DetailPanel: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronRight, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 53\n        }\n      }))),\n      Edit: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Edit, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 46\n        }\n      }))),\n      Export: forwardRef((props, ref) => /*#__PURE__*/React.createElement(SaveAlt, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 48\n        }\n      }))),\n      Filter: forwardRef((props, ref) => /*#__PURE__*/React.createElement(FilterList, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 48\n        }\n      }))),\n      FirstPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(FirstPage, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 51\n        }\n      }))),\n      LastPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(LastPage, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 50\n        }\n      }))),\n      NextPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronRight, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 50\n        }\n      }))),\n      PreviousPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronLeft, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 54\n        }\n      }))),\n      ResetSearch: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Clear, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 53\n        }\n      }))),\n      Search: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Search, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 48\n        }\n      }))),\n      SortArrow: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ArrowDownward, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 51\n        }\n      }))),\n      ThirdStateCheck: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Remove, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 57\n        }\n      }))),\n      ViewColumn: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ViewColumn, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 52\n        }\n      })))\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 13\n      }\n    }, !this.state.showTable && this.state.showLoginPage && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Login, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 25\n      }\n    })), this.state.showTable && !this.state.showLoginPage && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.backToLogin,\n      className: \"back_to_login\",\n      variant: \"text\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 25\n      }\n    }, \"Back to Login\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"satya_table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(MaterialTable, Object.assign({\n      icons: tableIcons\n    }, tableProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(Button, {\n      className: \"modal_button2\",\n      onClick: this.handleOpen,\n      variant: \"contained\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 25\n      }\n    }, \"Add Data\"), /*#__PURE__*/React.createElement(Modal, {\n      class: \"satya_modal\",\n      open: this.state.showAddDataModal,\n      onClose: this.handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"satya_form\",\n      noValidate: true,\n      autoComplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      className: \"textbox_modal\",\n      id: \"userid_basic\",\n      label: \"UserId\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      className: \"textbox_modal\",\n      id: \"age_basic\",\n      label: \"Age\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      className: \"textbox_modal\",\n      id: \"gender_basic\",\n      label: \"Gender\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      className: \"textbox_modal\",\n      id: \"physics_basic\",\n      label: \"Physics\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      className: \"textbox_modal\",\n      id: \"chem_basic\",\n      label: \"Chemistry\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      className: \"textbox_modal\",\n      id: \"math_basic\",\n      label: \"Math\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      className: \"textbox_modal\",\n      id: \"cgpa_basic\",\n      label: \"CGPA\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      id: \"modal_err_msg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 33\n      }\n    }, \"Enter All Values\"), /*#__PURE__*/React.createElement(Button, {\n      id: \"modal_button\",\n      className: \"modal_button\",\n      onClick: this.addDataToDB,\n      variant: \"contained\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 33\n      }\n    }, \"Add\"), /*#__PURE__*/React.createElement(Button, {\n      id: \"cancel_button\",\n      className: \"modal_button\",\n      onClick: this.handleClose,\n      variant: \"outlined\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 33\n      }\n    }, \"Cancel\")))));\n  }\n\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["D:/Uni/6th Semester/Web Development/Project/Project/studentDashboard/client/src/dashboard/dashboard.js"],"names":["React","Component","axios","Row","Col","css","Button","Modal","Login","MaterialTable","TextField","Skeleton","forwardRef","AddBox","ArrowDownward","Check","ChevronLeft","ChevronRight","Clear","DeleteOutline","Edit","FilterList","FirstPage","LastPage","Remove","SaveAlt","Search","ViewColumn","$","SimpleModal","Dashboard","postToDatabaseApi","postData","Promise","resolve","reject","post","then","response","console","log","catch","err","backToLogin","setState","showLoginPage","showTable","showModal","state","showAddDataModal","handleClose","addDataToDB","addData","temp_obj","userid_basic","document","getElementById","value","age_basic","gender_basic","physics_basic","chem_basic","math_basic","cgpa_basic","name","age","gender","phy","chem","math","cgpa","email","password","querySelector","innerText","style","display","resp","props","getNewData","tableData","getTableProps","data","tableIcons","Add","ref","Delete","DetailPanel","Export","Filter","NextPage","PreviousPage","ResetSearch","SortArrow","ThirdStateCheck","actions","icon","tooltip","onClick","event","rowData","columns","title","field","options","search","paging","filtering","exportButton","headerStyle","backgroundColor","color","rowStyle","tableConfig","selection","handleOpen","componentWillMount","showSpinner","showErrorMsg","componentDidMount","componentDidUpdate","render","tableProps"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport axios from 'axios';\nimport { Row, Col} from 'react-bootstrap';\nimport css from \"./dashboard.css\"\nimport Button from '@material-ui/core/Button';\nimport Modal from '@material-ui/core/Modal';\nimport Login from '../login/Login'\nimport MaterialTable from \"material-table\";\nimport TextField from '@material-ui/core/TextField';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { forwardRef } from 'react';\n\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport $ from 'jquery';\n\nimport SimpleModal from \"./requiredModal\";\n\nclass Dashboard extends Component{\n    componentWillMount(){\n        this.setState({\n            showLoginPage: false,\n            showTable: true,\n            showAddDataModal: false,\n            tableData: this.props.tableData,\n            showSpinner: false,\n            showErrorMsg: false\n        })\n    }\n    componentDidMount(){\n        /*$(document.body).click((e)=> {\n            this.setState({\n                ...this.state,\n                showAddDataModal: false,\n            });\n       });*/\n    }\n    componentDidUpdate(){\n        /*$(document.body).click( (e)=> {\n            this.setState({\n                ...this.state,\n                showAddDataModal: false,\n            });\n       });*/\n    }\n    postToDatabaseApi = (postData) => {\n        return new Promise(async (resolve,reject)=>{\n            axios\n                .post(\"http://localhost:5000/api/users\",postData)\n                .then(response => {\n                    console.log(\"response is:::\",response);\n                    resolve(response);\n            }).catch(err => {\n                    reject(err)\n            });\n        });\n    }\n    backToLogin = () => {\n        this.setState({\n            showLoginPage: true,\n            showTable: false\n        })\n    }\n    showModal = () => {\n        return(\n            <Modal\n                open={this.state.showAddDataModal}\n                onClose={this.handleClose}\n                aria-labelledby=\"simple-modal-title\"\n                aria-describedby=\"simple-modal-description\"\n                >\n                <form noValidate autoComplete=\"off\">\n                    <TextField id=\"userId-basic\" label=\"UserId\" />\n                    <TextField id=\"standard-basic\" label=\"Age\" />\n                    <TextField id=\"standard-basic\" label=\"Gender\" />\n                    <TextField id=\"standard-basic\" label=\"Physics\" />\n                    <TextField id=\"standard-basic\" label=\"Chemistry\" />\n                    <TextField id=\"standard-basic\" label=\"Math\" />\n                    <Button onClick={this.addDataToDB} variant=\"text\" color=\"primary\" size=\"sm\">\n                                                Add</Button>\n                </form>\n            </Modal>\n        );\n    }\n    addData = () => {\n        this.setState({\n            ...this.state,\n            showAddDataModal: true,\n        });\n    }\n    addDataToDB = async () => {\n        let temp_obj = {};\n        let userid_basic = document.getElementById(\"userid_basic\").value;\n        let age_basic = document.getElementById(\"age_basic\").value;\n        let gender_basic = document.getElementById(\"gender_basic\").value;\n        let physics_basic = document.getElementById(\"physics_basic\").value;\n        let chem_basic = document.getElementById(\"chem_basic\").value;\n        let math_basic = document.getElementById(\"math_basic\").value;\n        let cgpa_basic = document.getElementById(\"cgpa_basic\").value;\n        temp_obj.name = userid_basic;\n        temp_obj.age = age_basic;\n        temp_obj.gender = gender_basic;\n        temp_obj.phy = physics_basic;\n        temp_obj.chem = chem_basic;\n        temp_obj.math = math_basic;\n        temp_obj.cgpa = cgpa_basic;\n        temp_obj.email = userid_basic + \"@gmail.com\";\n        temp_obj.password = \"adminoo\"\n        console.log(\"temp_obj is:::\",temp_obj);\n        if(\n            temp_obj.name != \"\" &&\n            temp_obj.age != \"\" && temp_obj.gender != \"\" &&\n            temp_obj.phy != \"\" && temp_obj.chem != \"\" &&\n            temp_obj.math != \"\" && temp_obj.cgpa != \"\"\n        ){\n            document.querySelector(\"#modal_button\").innerText = \"Adding...\"\n            document.getElementById(\"modal_err_msg\").style.display = \"none\"\n            const resp = await this.postToDatabaseApi(temp_obj);\n            console.log(\"resp is::\",resp);\n            let response = await this.props.getNewData()\n            this.setState({\n                ...this.state,\n                tableData: response,\n            });\n            this.handleClose();\n        }else{\n            document.getElementById(\"modal_err_msg\").style.display = \"block\"\n        }\n    }\n    getTableProps=()=>{\n        const data = this.state.tableData;\n        const tableIcons = {\n            Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n            Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n            Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n            Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n            DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n            Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n            Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n            Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n            FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n            LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n            NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n            PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n            ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n            Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n            SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n            ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n            ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n        };\n        const actions=[\n            {\n              icon: tableIcons.Delete,\n              tooltip: 'Delete Row',\n              onClick: (event, rowData) => {\n                // Do save operation\n              }\n            }\n        ]\n        const columns = [\n            {\n              title: \"Name\",\n              field: \"name\",\n            },\n            {\n              title: \"Email\",\n              field: \"email\",\n            },\n            {\n              title: \"Age\",\n              field: \"age\",\n            },\n            {\n              title: \"Gender\",\n              field: \"gender\",\n            },\n            {\n                title: \"Phy\",\n                field: \"phy\",\n            },\n            {\n                title: \"Chem\",\n                field: \"chem\",\n            },\n            {\n                title: \"Math\",\n                field: \"math\",\n            },\n            {\n                title: \"CGPA\",\n                field: \"cgpa\",\n            }\n        ];\n        const options = { \n            search: true, \n            paging: true, \n            filtering: true, \n            exportButton: true ,\n            headerStyle: {\n                backgroundColor: '#01579b',\n                color: '#FFF'\n            },\n            rowStyle: {\n                backgroundColor: '#EEE',\n            }\n        }\n        const tableConfig = {\n            title:\"Student Marksheet Table\",\n            data,\n            columns,\n            //actions,\n            options,\n            //icons: {...tableIcons},\n            selection: true\n        }\n        return tableConfig;\n    }\n    handleOpen = () => {\n        this.setState({\n            ...this.state,\n            showAddDataModal: true,\n        });\n    };\n    \n    handleClose = () => {\n        this.setState({\n            ...this.state,\n            showAddDataModal: false,\n        });\n    };\n\n    render(){\n        const tableProps = this.getTableProps();\n        const tableIcons = {\n            Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n            Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n            Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n            Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n            DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n            Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n            Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n            Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n            FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n            LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n            NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n            PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n            ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n            Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n            SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n            ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n            ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n        };\n        return(\n            <div>\n                {/*\n                    this.state.showSpinner && (\n                        <Skeleton variant=\"circle\" width={40} height={40} />\n                    )\n                    */}\n                {!this.state.showTable && this.state.showLoginPage && (\n                    <div>\n                        <Login/>\n                    </div>\n                )}\n                {this.state.showTable && !this.state.showLoginPage && (\n                    <div>\n                        <Button onClick={this.backToLogin} className=\"back_to_login\" variant=\"text\" color=\"primary\">\n                                                Back to Login</Button>\n                        <div className=\"satya_table\">\n                            <MaterialTable icons={tableIcons} {...tableProps}/>\n                        </div>\n                        <Button className=\"modal_button2\" onClick={this.handleOpen} variant=\"contained\" color=\"primary\">\n                                                            Add Data</Button>\n                        <Modal class=\"satya_modal\"\n                            open={this.state.showAddDataModal}\n                            onClose={this.handleClose}\n                            \n                        >\n                            <form className=\"satya_form\"noValidate autoComplete=\"off\">\n                                <TextField className=\"textbox_modal\" id=\"userid_basic\" label=\"UserId\" />\n                                <TextField className=\"textbox_modal\" id=\"age_basic\" label=\"Age\" />\n                                <TextField className=\"textbox_modal\" id=\"gender_basic\" label=\"Gender\" />\n                                <TextField className=\"textbox_modal\" id=\"physics_basic\" label=\"Physics\" />\n                                <TextField className=\"textbox_modal\" id=\"chem_basic\" label=\"Chemistry\" />\n                                <TextField className=\"textbox_modal\" id=\"math_basic\" label=\"Math\" />\n                                <TextField className=\"textbox_modal\" id=\"cgpa_basic\" label=\"CGPA\" />\n                                <p id=\"modal_err_msg\">Enter All Values</p>\n                                <Button id=\"modal_button\" className=\"modal_button\" onClick={this.addDataToDB} variant=\"contained\" color=\"primary\">\n                                                            Add</Button>\n                                <Button id=\"cancel_button\" className=\"modal_button\" onClick={this.handleClose} variant=\"outlined\" color=\"primary\">\n                                                            Cancel</Button>\n                            </form>\n                        </Modal>\n                    </div>\n                )}\n                {/*{this.state.showAddDataModal && this.showModal()}*/}\n            </div>\n        )\n    }\n}\n\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}